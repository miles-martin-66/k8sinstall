apiVersion: v1
kind: Namespace
metadata:
  name: haproxy-demo

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ws-conf
  namespace: haproxy-demo
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       80;
          server_name  localhost;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ws-data
  namespace: haproxy-demo
data:
  index.html: |
    <html><head></head><body><h1>This is my web server content!</h1></body></html>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws
  namespace: haproxy-demo
spec:
  selector:
    matchLabels:
      app: ws
  replicas: 10
  template:
    metadata:
      labels:
        app: ws
    spec:
      containers:
      - name: ws
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
            - name: ws-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: ws-data
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
              readOnly: true
      volumes:
      - name: ws-conf
        configMap:
          name: ws-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: ws-data
        configMap:
          name: ws-data
          items:
            - key: index.html
              path: index.html

---
apiVersion: v1
kind: Service
metadata:
  namespace: haproxy-demo
  name: ws
spec:
# Commented Nodeport and added a ClusterIP of none to stop k8s from controlling packet routing between HAProxy and the pods.
# type: NodePort
  type: ClusterIP
  clusterIP: None 
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: ws

